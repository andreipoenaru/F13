#include<fstream>
#include<cstdio>
#include<iostream>
#include<cstdlib>
#include<cstring>
using namespace std;
void sub(int A[], int B[])
{
      int i, t = 0;
      for (i = 1; i <= A[0]; i++) {
              A[i] -= ((i <= B[0]) ? B[i] : 0) + t;
              A[i] += (t = A[i] < 0) * 10000;
      }
      for (; A[0] > 1 && !A[A[0]]; A[0]--);
}
void add(int A[], int B[])
{
      int i, t = 0;
      for (i=1; i<=A[0] || i<=B[0] || t; i++, t/=10000)
              A[i] = (t += A[i] + B[i]) % 10000;
      A[0] = i - 1;
}

void mul(int A[], int B)
{
      int i, t = 0;
      for (i = 1; i <= A[0] || t; i++, t /= 10000)
              A[i] = (t += A[i] * B) % 10000;
      A[0] = i - 1;
}
void MUL(int A[], int B[])
{
      int i, j, t, C[5000];
      memset(C, 0, sizeof(C));
      for (i = 1; i <= A[0]; i++)
      {
              for (t=0, j=1; j <= B[0] || t; j++, t/=10000)
                      C[i+j-1]=(t+=C[i+j-1]+A[i]*B[j])%10000;
              if (i + j - 2 > C[0]) C[0] = i + j - 2;
      }
      memcpy(A, C, sizeof(C));
}
void div(int A[], int B)
{
      int i, t = 0;
      for (i = A[0]; i > 0; i--, t %= B)
              A[i] = (t = t * 10000 + A[i]) / B;
      for (; A[0] > 1 && !A[A[0]]; A[0]--);
}
int mod(int A[], int B)
{
      int i, t = 0;
      for (i = A[0]; i > 0; i--)
              t = (t * 10000 + A[i]) % B;
      return t;
}

int compar (int A[], int B[])
{
	if (A[0]<B[0])
		return -1;
	if (A[0]>B[0])
		return 1;
	for (int i=A[0]; i>=1; i--)
	{
		if (A[i]<B[i])
			return -1;
		if (A[i]>B[i])
			return 1;
	}
	return 0;
}
int n,b;
int C[5000];
int P[5000];
int P2[5000];

void ridica_la_putere( int A[], int C[])
{
	int cb=b;
	int sol[5000];
	memset(sol,0,sizeof(sol));
	sol[0]=sol[1]=1;
	while (cb)
	{
		if (cb%2)
			MUL(sol,A);
		if (compar(sol,C)>0)
			break;
		MUL(A,A);
		cb/=2;
	}
	memcpy(A,sol,sizeof(sol));
}

void afis (int A[])
{
	int desc[500];
	while (! (A[0]==1 && A[1]==0))
		desc[++desc[0]]=mod(A,60), div(A,60);
	for (int i=desc[0]; i>=1; i--)
	{
		while (desc[i]>=10)
			cout<<">",desc[i]-=10;
		while (desc[i]>0)
			cout<<"Y",desc[i]--;
		if (i>1) cout<<".";
	}
	cout<<"\n";
}
void calcul (int b, int C[])
{
	int st[5000],dr[5000],rez[5000],mij[5000];
	int unu[5000];
	memset(unu,0,sizeof(unu));
	unu[0]=1,unu[1]=1;
	memset(st,0,sizeof(st));
	st[0]=1,st[1]=1;
	memcpy(dr,C,sizeof(dr));
	while (compar(st,dr)<=0)
	{
		memset(rez,0,sizeof(rez));
		rez[0]=1;
		add(rez,st);
		add(rez,dr);
		div(rez,2);
		memcpy(mij,rez,sizeof(rez));
		ridica_la_putere(rez,C);
		if (compar(rez,C)<0)
		{
			memcpy(st,mij,sizeof(mij));
			add(st,unu);
		}
		if (compar(rez,C)>0)
		{
			memcpy(dr,mij,sizeof(mij));
			sub(dr,unu);
		}
		if (compar(rez,C)==0)
			break;
	}
	afis(mij);
}
int main()
{
	freopen("numere.in","r",stdin);
	freopen("numere.out","w",stdout);
	char c[5000];
	fgets(c,5000,stdin);
	int p=1,nr=0;
	for (int i=strlen(c)-1; i>=0; i--)
	{
		if (c[i]=='.')
		{
			n=n+p*nr;
			p=p*60;
			nr=0;
			continue;
		}
		if (c[i]=='Y')
			nr++;
		if (c[i]=='>')
			nr+=10;
	}
	n=n+p*nr;
	for (int i=1; i<=n; i++)
	{
		fgets(c,5000,stdin);
		memset(P,0,sizeof(P));
		memset(C,0,sizeof(C));
		C[0]=1;
		P[0]=1;
		P[1]=1;
		nr=0;
		b=0;
		int j;
		for (j=strlen(c)-1; c[j]!=' '; j--)
		{
			if (c[j]=='.')
			{
				memcpy(P2,P,sizeof(P));
				mul(P2,nr);
				add(C,P2);
				mul(P,60);
				nr=0;
				continue;
			}
			if (c[j]=='Y')
				nr++;
			if (c[j]=='>')
				nr+=10;
		}
		memcpy(P2,P,sizeof(P));
		mul(P2,nr);
		add(C,P2);
		j--;
		p=1,nr=0;
		for(; j>=0; j--)
		{
			if (c[j]=='.')
			{
				b=b+nr*p;
				p=p*60;
				nr=0;
				continue;
			}
			if (c[j]=='Y')
				nr++;
			if (c[j]=='>')
				nr+=10;
		}
		b=b+nr*p;
		calcul(b,C);
	}
	return 0;
}
